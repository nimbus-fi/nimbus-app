generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TxnStatus {
  Processing
  Success
  Failure
}

enum ChainNetwork {
  Mainnet
  Testnet
}

enum Role {
  Admin
  User
}

model User {
  id                  String               @id @default(cuid())
  wallet_address      String               @unique
  role                Role                 @default(User)
  transaction_history TransactionHistory[]

  @@index([wallet_address])
}

model Chain {
  id                    String       @id @default(cuid())
  name                  String       @unique
  protocols             Protocol[]
  network               ChainNetwork
  strategy              Strategy[]
  pyth_contract_address String
  pyth_contract_abi_url String
}

model Protocol {
  id         String     @id @default(cuid())
  name       String     @unique
  image_url  String
  strategies Strategy[]
  steps      Step[]
  chains     Chain[]
}

model Token {
  id         String     @id @default(cuid())
  name       String
  logo_url   String
  strategies Strategy[]
  steps      Step[]
}

model Strategy {
  id               String     @id @default(cuid())
  name             String     @unique
  slug             String     @unique
  description      String
  apy              String
  multiplier       String
  protocols        Protocol[]
  tokens           Token[]
  steps            Step[]
  risks            Risk[]
  price_feeds      String[]
  abi_url          String
  contract_address String
  chain            Chain      @relation(fields: [chainId], references: [id])
  chainId          String

  @@index([slug])
}

model Step {
  id          String   @id @default(cuid())
  name        String
  amount      String
  yield       String
  protocol    Protocol @relation(fields: [protocol_id], references: [id])
  protocol_id String
  token       Token    @relation(fields: [token_id], references: [id])
  token_id    String
  strategy    Strategy @relation(fields: [strategy_id], references: [id])
  strategy_id String

  @@index([strategy_id])
}

model Risk {
  id          String   @id @default(cuid())
  name        String
  strategy    Strategy @relation(fields: [strategy_id], references: [id])
  strategy_id String

  @@index([strategy_id])
}

model TransactionHistory {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [user_id], references: [id])
  user_id         String
  amount          Float
  transactionType String
  timestamp       DateTime  @default(now())
  status          TxnStatus @default(Processing)

  @@index([user_id])
}
